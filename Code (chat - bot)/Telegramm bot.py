from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove, Update
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
    ConversationHandler,
    MessageHandler,
    filters,
)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
MAIN_MENU, FILMS_MENU = range(2)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ 
application = Application.builder().token("TOKEN").build()

# –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–π
WELCOME_TEXT = """
–ü—Ä–∏–≤–µ—Ç! üëã –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π. 
–Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å —Ñ–∏–ª—å–º–∞–º–∏, —Å–µ—Ä–∏–∞–ª–∞–º–∏ –∏ –∫–Ω–∏–≥–∞–º–∏. 
–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∏–∂–µ –∏ –Ω–∞—á–Ω–µ–º! üé¨üì∫üìö
"""

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_menu_keyboard = [
    ["–§–∏–ª—å–º—ã", "–°–µ—Ä–∏–∞–ª—ã"],
    ["–ö–Ω–∏–≥–∏"]
]

films_menu_keyboard = [
    ["–°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤", "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"],
    ["–§–∏–ª—å—Ç—Ä", "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"],
    ["–ó–∞–º–µ—Ç–∫–∏", "–ù–∞–∑–∞–¥"]
]

def create_keyboard(keyboard):
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text(
        WELCOME_TEXT,
        reply_markup=create_keyboard(main_menu_keyboard)
    )
    return MAIN_MENU

async def main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    text = update.message.text
    if text == "–§–∏–ª—å–º—ã":
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å —Ñ–∏–ª—å–º–∞–º–∏:",
            reply_markup=create_keyboard(films_menu_keyboard)
        )
        return FILMS_MENU
    elif text in ["–°–µ—Ä–∏–∞–ª—ã", "–ö–Ω–∏–≥–∏"]:
        await update.message.reply_text(
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {text}. –≠—Ç–æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –µ—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
            reply_markup=create_keyboard(main_menu_keyboard)
        ) 
        return MAIN_MENU
    else:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.",
            reply_markup=create_keyboard(main_menu_keyboard))
        return MAIN_MENU

async def films_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    text = update.message.text
    if text == "–ù–∞–∑–∞–¥":
        await update.message.reply_text(
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=create_keyboard(main_menu_keyboard))
        return MAIN_MENU
    else:
        await update.message.reply_text(
            f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {text}. –≠—Ç–æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –µ—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
            reply_markup=create_keyboard(films_menu_keyboard))
        return FILMS_MENU

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text(
        "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.",
        reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

def main() -> None:
    # –°–æ–∑–¥–∞–µ–º ConversationHandler
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            MAIN_MENU: [
                MessageHandler(filters.Regex("^(–§–∏–ª—å–º—ã|–°–µ—Ä–∏–∞–ª—ã|–ö–Ω–∏–≥–∏)$"), main_menu)
            ],
            FILMS_MENU: [
                MessageHandler(filters.Regex("^(–°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤|–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏|–§–∏–ª—å—Ç—Ä|–ò–∑–±—Ä–∞–Ω–Ω–æ–µ|–ó–∞–º–µ—Ç–∫–∏|–ù–∞–∑–∞–¥)$"), films_menu)
            ],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )

    application.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()
